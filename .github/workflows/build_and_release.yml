name: Build and Release

on:
  push:
    tags:
      - "V*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.18.x]
        arch: [amd64, arm64]
        include:
          - os: windows-latest
            arch: arm64
            skip: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        if: ${{ !matrix.skip }}
        shell: pwsh
        run: |
          $GOOS = (echo "${{ matrix.os }}" | ForEach-Object { $_.split('-')[0] })

          if ($GOOS -eq "ubuntu") {
              $GOOS = "linux"
          } elseif ($GOOS -eq "macos") {
              $GOOS = "darwin"
          }

          $GOARCH = "${{ matrix.arch }}"
          $BINARY_NAME = "openai-on-wechat-$GOOS-$GOARCH"

          if ($GOOS -eq "windows") {
              $BINARY_NAME = "$BINARY_NAME.exe"
          }

          go build -o $BINARY_NAME

      - name: Zip artifacts
        if: ${{ !matrix.skip }}
        shell: pwsh
        run: |
          $GOOS = (echo "${{ matrix.os }}" | ForEach-Object { $_.split('-')[0] })

          if ($GOOS -eq "ubuntu") {
              $GOOS = "linux"
          } elseif ($GOOS -eq "macos") {
              $GOOS = "darwin"
          }

          $GOARCH = "${{ matrix.arch }}"
          $BINARY_NAME = "openai-on-wechat-$GOOS-$GOARCH"

          if ($GOOS -eq "windows") {
              $BINARY_NAME = "$BINARY_NAME.exe"
          }

          Compress-Archive -Path $BINARY_NAME, "config.json.example", "prompt.txt.example" -DestinationPath "$BINARY_NAME.zip"

      - name: Upload Artifacts
        if: ${{ !matrix.skip }}
        uses: actions/upload-artifact@v2
        with:
          name: openai-on-wechat-${{ matrix.os }}-${{ matrix.arch }}.zip
          path: |
            *.zip

  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/V')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - name: List downloaded artifacts
        run: ls -la ./artifacts

      - name: Release
        uses: softprops/action-gh-release@v1.1.1
        with:
          files:  "./artifacts/*.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
